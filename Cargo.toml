[package]
name = "custos"
version = "0.7.0"
edition = "2021"
license = "MIT"
description = "A minimal OpenCL, WGPU, CUDA and host CPU array manipulation engine."
repository = "https://github.com/elftausend/custos"
keywords = ["gpu", "autodiff", "arrays", "deep-learning", "fixed-size"]
categories = ["science", "mathematics", "no-std", "external-ffi-bindings"]
readme = "README.md"
rust-version = "1.81"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
#cuwanto-client = { path = "../cuwanto/cuwanto-client", optional = true }
#cuwanto-server = {path="../cuwanto/cuwanto-server", optional=true}
min-cl = { git = "https://github.com/elftausend/min-cl", optional = true }
# min-cl = { version = "0.3.0", optional=true }
# min-cl = { path="../min-cl", optional=true }

# WGPU deps
# futures-intrusive = {version="0.5.0", optional=true}
# pollster = {version="0.3", optional=true }
# wgpu = {version="0.15", optional=true }

# custos-macro = {path = "../custos-macro", optional=true}
custos-macro = { git = "https://github.com/elftausend/custos-macro", optional = true }
#custos-macro = {version = "0.1.1", optional=true}

# no-std float math
libm = { version = "0.2.6", optional = true }

ash = { version = "0.38", optional = true }
naga = { version = "0.19", features = ["wgsl-in", "spv-out"], optional = true }

half = { version = "2.3", default-features = false, optional = true }

# nnapi
# nnapi = { path = "../nnapi/nnapi", optional = true}
nnapi = { version = "0.2", optional = true }

# only used for logging
# ndk-sys = {version = "0.5", features=["test"], optional = true}

serde = { version = "1.0", features = ["derive"], optional = true }
serde_json = { version = "1", optional = true }

[build-dependencies]
# min-cl = { path="../min-cl", optional=true }
min-cl = { git = "https://github.com/elftausend/min-cl", optional = true }
# min-cl = { version = "0.3.0", optional=true }

[features]
default = ["cpu", "blas", "static-api", "macro", "cached", "autograd", "vulkan", "stack"]

# default = ["cpu"]
# default = ["no-std"]
# default = ["opencl"]
# default = ["untyped", "cpu", "lazy", "graph", "autograd", "fork", "serde", "json", "half", "cached", "static-api", "stack", "opencl", "nnapi"]


std = []

cpu = ["std"]
opencl = ["std", "dep:min-cl", "cpu", "cached"]
#network = ["cuwanto-client"]
cuda = ["std"]
blas = []
static-api = ["cpu"]
stack = []
no-std = ["stack", "dep:libm"]
# wgpu = ["dep:wgpu", "dep:pollster", "dep:futures-intrusive"]
macro = ["dep:custos-macro"]
# nnapi = ["std", "dep:nnapi", "dep:ndk-sys", "lazy"]
nnapi = ["std", "dep:nnapi", "lazy"]
untyped = ["cpu"]

# modules
autograd = ["std", "cached", "lazy"]
lazy = ["std"]
cached = ["std"]
fork = ["std"]
graph = ["std"]

half = ["dep:half"]

vulkan = ["std", "dep:ash", "dep:naga", "wgsl", "cpu"]
wgsl = []

serde = ["dep:serde"]
json = ["dep:serde_json"]

[dev-dependencies]
custos-macro = { git = "https://github.com/elftausend/custos-macro" }
serde_test = "1"
# custos-macro = {path = "../custos-macro"}
#custos-macro = {version = "0.1.1"}

[[example]]
name = "cuda_usage"
required-features = ["cuda"]

[[example]]
name = "cpu_usage"
required-features = ["cpu"]

[[example]]
name = "cl_usage"
required-features = ["opencl"]

[[example]]
name = "lazy_and_fusing"
required-features = ["opencl", "lazy", "graph"]

[[example]]
name = "modules_usage"
required-features = ["cpu"]

[[example]]
name = "static-api"
required-features = ["static-api", "opencl"]

[[example]]
name = "unified_memory"
required-features = ["opencl"]

[[example]]
name = "opencl_kernel_launch"
required-features = ["opencl"]

[[example]]
name = "read"
required-features = ["cpu"]

[[example]]
name = "fixed-size-stack"
required-features = ["cpu", "stack"]

[[example]]
name = "mul_buf_cpu_impl"
required-features = ["cpu"]

[[example]]
name = "custom_module"
required-features = ["cpu"]

[[test]]
name = "write"
required-features = ["cpu"]

[[test]]
name = "clear"
required-features = ["cpu"]

[[test]]
name = "buffer"
required-features = ["cpu"]

[[test]]
name = "opencl_unified"
required-features = ["opencl"]

[[test]]
name = "cl_kernel_launch"
required-features = ["opencl"]

[[test]]
name = "network_device"
required-features = ["network"]

#[[bench]]
#name = "fixed_size_vs_vec"
#harness = false

[[bench]]
name = "cache_adv"
harness = false

[[bench]]
name = "alloc"
harness = false

#[[bench]]
#name = "gemm"
#harness = false
#required-features = ["opencl", "cuda"]

#[[bench]]
#name = "cuda_vs_opencl"
#harness = false
#required-features = ["opencl", "cuda"]

[package.metadata.docs.rs]
rustc-args = ["--cfg", "docsrs"]
