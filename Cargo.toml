[package]
name = "custos"
version = "0.6.0"
edition = "2021"
license = "MIT"
description = "A minimal OpenCL, CUDA and host CPU array manipulation engine / framework."
repository = "https://github.com/elftausend/custos"
keywords = ["CUDA", "OpenCL", "arrays", "deep-learning", "array-manipulation"]
categories = ["science", "mathematics", "memory-management", "external-ffi-bindings"]
readme = "README.md"
rust-version = "1.65"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
#cuwanto-server = {path="../cuwanto/cuwanto-server", optional=true}
min-cl = { path = "../min-cl", optional=true }

# WGPU deps
futures-intrusive = {version="0.5.0", optional=true}
pollster = {version="0.2.5", optional=true }
wgpu = {version="0.14.2", optional=true }

custos-macro = {path = "../custos-macro", optional=true}

# no-std float math
libm = { version="0.2.6", optional = true }

[build-dependencies]
min-cl = { path = "../min-cl", optional=true }


[features]
#default = ["stack", "cpu", "opencl"]
default = ["cpu"]
cpu = []
opencl = ["dep:min-cl", "cpu"]
#network = ["cuwanto-server"]
cuda = []
realloc = []
opt-cache = []
blas = []
static-api = []
stack = []
no-std = ["stack", "dep:libm"]
wgpu = ["dep:wgpu", "dep:pollster", "dep:futures-intrusive"]
macro = ["dep:custos-macro"]

[dev-dependencies]
#criterion = "0.3"
custos-macro = {path = "../custos-macro"}

[[example]]
name = "cuda_readme"
required-features = ["cuda"]

[[example]]
name = "cl_readme"
required-features = ["opencl"]

[[example]]
name = "unified_memory"
required-features = ["opencl"]

[[example]]
name = "opencl_kernel_launch"
required-features = ["opencl"]

[[test]]
name = "opencl_unified"
required-features = ["opencl"]

[[test]]
name = "cl_kernel_launch"
required-features = ["opencl"]

[[test]]
name = "network_device"
required-features = ["network"]

#[[bench]]
#name = "fixed_size_vs_vec"
#harness = false

[[bench]]
name = "cache_adv"
harness = false

[[bench]]
name = "alloc"
harness = false

#[[bench]]
#name = "gemm"
#harness = false
#required-features = ["opencl", "cuda"]

#[[bench]]
#name = "cuda_vs_opencl"
#harness = false
#required-features = ["opencl", "cuda"]